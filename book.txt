// ðŸŸ¢ Get all technician availabilities
async function getAllTechnicianAvailabilitiesModel() {
  const [rows] = await pool.query(`
    SELECT 
      ta.technicianAvailabilityId,
      ta.technicianId,
      ta.timeSlotId,
      ta.isAvailable,
      t.technicianId,
      CONCAT(u.firstName, ' ', u.lastName) AS technicianName,
      ts.startTime,
      ts.endTime
    FROM technicianAvailability ta
    JOIN technicians t ON ta.technicianId = t.technicianId
    JOIN users u ON t.userId = u.userId
    JOIN timeSlot ts ON ta.timeSlotId = ts.timeSlotId
    ORDER BY ts.startTime ASC
  `);
  return rows;
}

// ðŸŸ¦ Get availability by technician & slot
async function getTechnicianAvailabilityByIdModel(technicianAvailabilityId) {
  const [rows] = await pool.query(
    `SELECT * FROM technicianAvailability WHERE technicianAvailabilityId = ?`,
    [technicianAvailabilityId]
  );
  return rows[0];
}

// ðŸŸ¨ Create technician availability
async function createTechnicianAvailabilityModel({ technicianId, timeSlotId, isAvailable }) {
  try {
    const [result] = await pool.query(
      `INSERT INTO technicianAvailability (technicianId, timeSlotId, isAvailable)
       VALUES (?, ?, ?)
       ON DUPLICATE KEY UPDATE isAvailable = VALUES(isAvailable)`,
      [technicianId, timeSlotId, isAvailable]
    );
    return result;
  } catch (err) {
    throw err;
  }
}

// ðŸŸ§ Update technician availability
async function updateTechnicianAvailabilityModel(technicianAvailabilityId, { isAvailable }) {
  const [result] = await pool.query(
    `UPDATE technicianAvailability SET isAvailable = ? WHERE technicianAvailabilityId = ?`,
    [isAvailable, technicianAvailabilityId]
  );
  return result;
}

// ðŸŸ¥ Delete technician availability
async function deleteTechnicianAvailabilityModel(technicianAvailabilityId) {
  const [result] = await pool.query(
    `DELETE FROM technicianAvailability WHERE technicianAvailabilityId = ?`,
    [technicianAvailabilityId]
  );
  return result;
}
module.exports = {
  getAllBookingsModel,
  getBookingByIdModel,
  createBookingModel,
  updateBookingModel,
  deleteBookingModel,
  updateBookingStatusModel,
  getBookingHistoryModel,
  getBookedTechniciansBySlotAndDate,
  getSlotsWithBookedTechniciansByDateModel,
  getTechnicianAvailabilityBySlotModel,

  // âž• New technicianAvailability exports
  getAllTechnicianAvailabilitiesModel,
  getTechnicianAvailabilityByIdModel,
  createTechnicianAvailabilityModel,
  updateTechnicianAvailabilityModel,
  deleteTechnicianAvailabilityModel,
};
